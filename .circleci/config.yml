# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

#commands
commands:
  print_pipeline_id:
    description: "print the pipeline id"
    steps:
      - checkout
      - run: echo the circle_ci is $CIRCLE_WORKFLOW_ID
  

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  print-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run: echo hello

  save_hello_world_output:
      docker:
      - image: cimg/base:stable
      steps:
        - checkout
        - run: mkdir -p workspace
        - run: echo "Hello, world!" > workspace/echo-output
        - persist_to_workspace:
            root: workspace
            paths:
              - echo-output

  print_output_file:
    docker:
      - image: cimg/base:stable
    steps:
        - checkout
        - attach_workspace:
            at: /tmp/workspace
        - run: cat /tmp/workspace/echo-output
      
  test_command:
    docker:
      - image: cimg/base:stable
    #reuse command cmd
    steps: 
      - print_pipeline_id

  print_error_onfail:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Exit with one"
          command: return 1
      - run:
          name: "show on fail"
          command: echo "failed To be executed"
          when: on_fail

workflows:
  say-hello-workflow:
    jobs:
      - print-hello
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
      - test_command
      - print_error_onfail

